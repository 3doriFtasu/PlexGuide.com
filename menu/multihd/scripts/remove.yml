#!/bin/bash
#
# Title:      PlexGuide (Reference Title File)
# Author(s):  Admin9705 - Deiteq
# URL:        https://plexguide.com - http://github.plexguide.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  vars:
    service_vars:
      - { name: crypt1.service }
      - { name: crypt2.service }
      - { name: drive1.service }
      - { name: drive2.service }
      - { name: fcrypt.service }
      - { name: fdrive.service }
      - { name: sdrive.service }
      - { name: scrypt.service }
      - { name: gdrive.service }
      - { name: gcrypt.service }
      - { name: tdrive.service }
      - { name: tcrypt.service }
      - { name: supertransfer2.service }
      - { name: unionfs.service }
      - { name: unionfs-encrypt.service }
      - { name: move-en.service }
      - { name: move.service }
      - { name: plexdrive.service }
      - { name: rclone.service }
      - { name: rclone-en.service }
      - { name: rclone-encrypt.service }
  tasks:
    - name: Checking Existing Service Name
      stat:
        path: "/etc/systemd/system/{{ item.name }}"
      with_items: "{{ service_vars }}"
      register: check_service_name

    #    - debug:
    #        msg: 'Service name {{ item.item.name }} exists'
    #      with_items: "{{ check_service_name.results }}"
    #      when: item.stat.exists

    - name: Stop If Service Is Running
      systemd: state=stopped name={{ item.item.name}} daemon_reload=yes enabled=no
      with_items: "{{ check_service_name.results }}"
      when: item.stat.exists

    - name: Remove Services
      file:
        path: "/etc/systemd/system/{{ item.item.name }}"
        state: absent
      with_items: "{{ check_service_name.results }}"
      when: item.stat.exists

    - debug:
        msg: "Service name {{ item.item.name }} has been removed!"
      with_items: "{{ check_service_name.results }}"
      when: item.stat.exists
