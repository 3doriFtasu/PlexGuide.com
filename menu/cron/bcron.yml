#!/bin/bash
#
# [Ansible Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:

#  - name: "Generate Random Number"
#    set_fact:
#         sec: "{{ 15 | random }}"

#  - debug: msg="Pause Set for {{ sec }} seconds"

#  - wait_for: timeout={{ sec }}

  - name: "Generate Random Number"
    set_fact:
      program_var: sickrage

  - name: Register HD Path
    shell: "cat /var/plexguide/server.hd.path"
    register: path
    ignore_errors: True

  - name: Register HD Path
    shell: "cat /var/plexguide/data.location"
    register: tarlocation

  - name: "Server ID for Backup"
    shell: "cat /var/plexguide/pg.serverid"
    register: server_id

  - name: Stopping Docker Container - {{program_var}}
    docker_container:
      name: "{{program_var}}"
      state: stopped
    ignore_errors: True

  - name: "Backing Up Program to GDrive - {{program_var}}"
    archive:
      path:
      - "/opt/appdata/{{program_var}}/*"
      dest: "{{tarlocation.stdout}}/{{program_var}}.tar"
      format: tar

  - name: FLAG
    shell: "touch /tmp/flag4"
  ############ BACKUP OTHER - END
  - name: "Restart Docker Container - {{program_var}}"
    docker_container:
      name: "{{program_var}}"
      state: started
    ignore_errors: True

  - name: "Uploading {{program_var}}.tar to Google Drive"
    shell: "rclone copy {{tarlocation.stdout}}/{{program_var}}.tar gdrive:/plexguide/backup/{{server_id.stdout}} -v --checksum --drive-chunk-size=64M"

  - name: Remove TEMP Backup!
    file:
      path: "{{item}}"
      state: absent
    with_items:
      - "{{tarlocation.stdout}}/{{program_var}}.tar"
