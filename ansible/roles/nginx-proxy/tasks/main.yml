---

- name: Create nginx-proxy directories
  file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
  with_items:
    - /opt/nginx-proxy

- name: Import proxy.conf
  copy: "src=proxy.conf dest=/opt/nginx-proxy/proxy.conf force=yes owner=1000 group=1000 mode=0775"

- name: Remove NGINX-Proxy Container
  docker_container:
    name: nginx
    state: absent

#- name: Remove LetsEncrypt
  #docker_container:
    #name: letsencrypt
    #state: absent

- name: Deploy NGINX_Proxy
  docker_container:
    name: nginx
    image: "jwilder/nginx-proxy"
    pull: yes
    published_ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/nginx-proxy:/etc/nginx/certs:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/opt/nginx-proxy/proxy.conf:/etc/nginx/conf.d/proxy.conf"
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    restart_policy: always
    networks:
      #- name: bridge
        #aliases:
        #- nginx-proxy
    state: started
    network_mode: bridge

- name: Deploy Lets Encrypt
  docker_container:
    name: letsencrypt
    image: "jrcs/letsencrypt-nginx-proxy-companion"
    pull: yes
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/nginx-proxy:/etc/nginx/certs:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx"
    env:
      DEBUG: true
    restart_policy: always
    state: started
