#!/bin/bash
#
# [RClone Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq & FlickerRate
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################

########## Disable Other Services
# ansible-playbook /opt/plexguide/scripts/test/check-remove/tasks/main.yml
---
- name: Logging Ansible Role Information
  shell: "echo 'INFO - Ansible Role {{role_name}} Started' > /var/plexguide/pg.log && bash /opt/plexguide/scripts/log.sh"

###### DRIVE1
  - name: Drive1 Check
    stat:
      path: /mnt/.drive1
    register: drive1

  - name: Create Basic directories for DRIVE1
    file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
    with_items:
      - /mnt/.drive1
    when: drive1.stat.exists == False
    tags:
      - drive1
    ignore_errors: True
##### DRIVE2
  - name: Drive2 Check
    stat:
      path: /mnt/.drive2
    register: drive2

  - name: Create Basic directories for DRIVE2
    file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
    with_items:
      - /mnt/.drive2
    when: drive2.stat.exists == False
    tags:
      - drive2
    ignore_errors: True
##### CRYPT1
  - name: Crypt1 Check
    stat:
      path: /mnt/.crypt1
    register: crypt1

  - name: Create Basic directories for CRYPT1
    file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
    with_items:
      - /mnt/.crypt1
    when: crypt1.stat.exists == False
    tags:
      - crypt1
    ignore_errors: True
##### CRYPT2
  - name: Crypt2 Check
    stat:
      path: /mnt/.crypt2
    register: crypt2

  - name: Create Basic directories for CRYPT2
    file: "path={{item}} state=directory mode=0775 owner=1000 group=1000 recurse=true"
    with_items:
      - /mnt/.crypt2
    when: crypt2.stat.exists == False
    tags:
      - crypt2
    ignore_errors: True

########################################## MOVE START
  - name: Daemon-Reload
    systemd: state=stopped name=supertransfer2 daemon_reload=yes enabled=no
    ignore_errors: True
    tags:
      - move_en

  - name: Install Move Service to /opt/appdata/plexguide
    template:
      src: move_script.js2
      dest: /opt/appdata/plexguide/move.sh
      force: yes
    tags:
      - move_en

  - name: Stop If Move Service Running
    systemd: state=stopped name=move
    tags:
      - move_en
    ignore_errors: yes

  - name: Install Move Service
    template:
      src: move.js2
      dest: /etc/systemd/system/move.service
      force: yes
    tags:
      - move_en

  - name: Start Move
    systemd: state=started name=move daemon_reload=yes enabled=yes
    tags:
      - move_en
########################################## MOVE END

########### GCRYPT
  - name: Install GCRYPT Service
    template:
      src: gcrypt.js2
      dest: /etc/systemd/system/gcrypt.service
      force: yes
    tags:
      - gcrypt

  - name: Start GCRYPT
    systemd: state=started name=gcrypt daemon_reload=yes enabled=yes
    tags:
      - gcrypt

########### GDRIVE
  - name: Install GDRIVE Service
    template:
      src: gdrive.js2
      dest: /etc/systemd/system/gdrive.service
      force: yes
    tags:
      - gdrive_en

  - name: Start GDRIVE SERVICE
    systemd: state=started name=gdrive daemon_reload=yes enabled=yes
    tags:
      - gdrive_en

########### TCRYPT
  - name: Install TCRYPT Service
    template:
      src: tcrypt.js2
      dest: /etc/systemd/system/tcrypt.service
      force: yes
    tags:
      - tcrypt

  - name: Start TCRYPT
    systemd: state=started name=tcrypt daemon_reload=yes enabled=yes
    tags:
      - tcrypt

########### TDRIVE
  - name: Install TDRIVE Service
    template:
      src: tdrive.js2
      dest: /etc/systemd/system/tdrive.service
      force: yes
    tags:
      - tdrive_en

  - name: Start TDRIVE SERVICE
    systemd: state=started name=tdrive daemon_reload=yes enabled=yes
    tags:
      - tdrive_en

########### Drive1
  - name: Install DRIVE1 Service
    template:
      src: drive1.js2
      dest: /etc/systemd/system/drive1.service
      force: yes
    tags:
      - drive1

  - name: Start DRIVE1 SERVICE
    systemd: state=started name=drive1 daemon_reload=yes enabled=yes
    tags:
      - drive1

########### DRIVE2
  - name: Install DRIVE2 Service
    template:
      src: drive2.js2
      dest: /etc/systemd/system/drive2.service
      force: yes
    tags:
      - drive2

  - name: Start DRIVE2 SERVICE
    systemd: state=started name=drive2 daemon_reload=yes enabled=yes
    tags:
      - drive2

  - name: Install CRYPT1 Service
    template:
      src: crypt1.js2
      dest: /etc/systemd/system/crypt1.service
      force: yes
    tags:
      - crypt1

  - name: Start CRYPT1
    systemd: state=started name=crypt1 daemon_reload=yes enabled=yes
    tags:
      - crypt1

########### CRYPT2
  - name: Install CRYPT2 Service
    template:
      src: crypt2.js2
      dest: /etc/systemd/system/crypt2.service
      force: yes
    tags:
      - crypt2

  - name: Start CRYPT2
    systemd: state=started name=crypt2 daemon_reload=yes enabled=yes
    tags:
      - crypt2


########### UNIONFS
  - name: Register UNIONFS PATH
    shell: "cat /var/plexguide/unionfs.pgpath"
    register: unionfs_path
    tags:
      - unionfs_en
    ignore_errors: True

  - name: Stop If UNIONFS Service Running
    systemd: state=stopped name=unionfs
    tags:
      - unionfs_en
    ignore_errors: yes

  - name: Install UNIONFS Service
    template:
      src: unionfs.js2
      dest: /etc/systemd/system/unionfs.service
      force: yes
    tags:
      - unionfs_en

  - name: Start UNIONFS
    systemd: state=started name=unionfs daemon_reload=yes enabled=yes
    tags:
      - unionfs_en


########Unionfs Monitor
  - name: Stop If UFS Monitor Service Running
    systemd: state=stopped name=ufsmonitor
    ignore_errors: True
    tags:
      - ufsmonitor

  - name: Install UFS Monitor Service
    template:
      src: ufsmonitor.service
      dest: /etc/systemd/system/ufsmonitor.service
      force: yes
    ignore_errors: True
    tags:
      - ufsmonitor

  - name: Install UFS Script
    template:
      src: ufsmonitor.sh
      dest: /opt/appdata/plexguide/ufsmonitor.sh
      force: yes
    ignore_errors: True
    tags:
      - ufsmonitor

  - name: Daemon-Reload
    systemd: state=stopped name=ufsmonitor daemon_reload=yes enabled=no
    ignore_errors: True
    tags:
      - ufsmonitor

  - name: Start UFS Monitor
    systemd: state=started name=ufsmonitor enabled=yes
    ignore_errors: True
    tags:
      - ufsmonitor