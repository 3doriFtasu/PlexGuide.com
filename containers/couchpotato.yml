#!/bin/bash
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
###############################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:

# FACTS #######################################################################

  - name: "Set Known Facts"
    set_fact:
      pgrole: "couchpotato"
      intport: "5050"
      extport: "5050"
      image: "linuxserver/couchpotato"

# CORE (MANDATORY) ############################################################
  - name: CronJob Role
    include_tasks: "/opt/plexguide/containers/_core.yml"

# LABELS ######################################################################

  - name: "Setting PG Labels"
    set_fact:
      pg_labels:
        traefik.frontend.auth.basic.users: "{{auth.stdout}}"
        traefik.enable: "true"
        traefik.port: "{{intport}}"
        traefik.frontend.redirect.entryPoint: "https"
        traefik.frontend.rule: "Host:{{pgrole}}.{{domain.stdout}},{{tldset}}"

  - name: "Setting PG Volumes"
    set_fact:
      pg_volumes:
        - "/opt/appdata/{{pgrole}}/mp4_auxtomator:/config_mp4_automator"
        - "/opt/appdata/{{pgrole}}:/config"
        - "/mnt/unionfs/completed:/unionfs-downloads/shared"
        - "/mnt/unionfs:/unionfs"
        - "/mnt/unionfs/movies:/movies"
        - "{{path.stdout}}/torrentvpn/downloaded:/data/completed"
        - "{{path.stdout}}/sab/complete:/complete"
        - "{{path.stdout}}/nzbget/completed:/completed"
        - "{{path.stdout}}/rutorrent:/downloads"
        - "{{path.stdout}}/deluge/downloaded:/downloaded"
        - "{{path.stdout}}/qbittorrent/downloads:/qbit-downloads"
        - "/etc/localtime:/etc/localtime:ro"

  - name: "Setting PG ENV"
    set_fact:
      pg_env:
        PUID: 1000
        PGID: 1000

# MAIN DEPLOYMENT #############################################################

  - name: "Deploying Container - {{pgrole}}"
    docker_container:
      name: "{{pgrole}}"
      image: "{{image}}"
      pull: yes
      published_ports:
        - "{{ports.stdout}}{{extport}}:{{intport}}"
      volumes: "{{pg_volumes}}"
      env: "{{pg_env}}"
      restart_policy: always
      networks:
        - name: plexguide
          aliases:
            - "{{pgrole}}"
      state: started
      labels: "{{pg_labels}}"

# ENDING FOR COUCHPOTATO #######################################################
  - name: Check couchpotato.ini exists
    stat:
      path: "/opt/appdata/couchpotato/config.ini"
    register: cp_ini

  - name: Path for .ini
    wait_for:
      path: "/opt/appdata/couchpotato/config.ini"
      state: present
    when: cp_ini.stat.exists == False

  - name: "Wait 10 Seconds"
    wait_for:
      timeout: 10
    when: cp_ini.stat.exists == False

  - name: Turn the Wizard Off
    replace:
      path: /opt/appdata/couchpotato/config.ini
      regexp: "show_wizard = 1"
      replace: "show_wizard = 0"
    when: cp_ini.stat.exists == False

  - name: Turn on Dark Theme
    replace:
      path: /opt/appdata/couchpotato/config.ini
      regexp: "dark_theme = False"
      replace: "dark_theme = True"
    when: cp_ini.stat.exists == False

  #- name: Turn On Renamer
    #replace:
      #path: /opt/appdata/couchpotato/config.ini
      #regexp: "enabled = False"
      #replace: "enabled = True"
      #after: "[renamer]"
      #before: "[subtitle]"
    #when: cp_ini.stat.exists == False

  - name: Turn off Blackhole
    replace:
      path: /opt/appdata/couchpotato/config.ini
      regexp: "enabled = True"
      replace: "enabled = 0"
      after: "[blackhole]"
    when: cp_ini.stat.exists == False

  - name: "Wait 5 Seconds"
    wait_for:
      timeout: 5
    when: cp_ini.stat.exists == False

  - name: Stopping CouchPotato Container
    docker_container:
      name: couchpotato
      state: stopped
    when: cp_ini.stat.exists == False

  - name: Restarting CouchPotato Container
    docker_container:
      name: couchpotato
      state: started
    when: cp_ini.stat.exists == False
