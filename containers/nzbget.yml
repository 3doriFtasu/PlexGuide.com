#!/bin/bash
#
# Title:      PlexGuide (Reference Title File)
# Author(s):  Admin9705
# URL:        https://plexguide.com - http://github.plexguide.com
# GNU:        General Public License v3.0
#
# Additions:  clinton-hall & desimaniac (GITHUB)
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:

# FACTS #######################################################################

  - name: "Set Known Facts"
    set_fact:
      pgrole: "nzbget"
      intport: "6789"
      extport: "6789"
      image: "linuxserver/nzbget"

# CORE (MANDATORY) ############################################################
  - name: CronJob Role
    include_tasks: "/opt/plexguide/containers/_core.yml"

  - name: Create nzbget script directories
    file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
    with_items:
      - /opt/appdata/nzbget/scripts/nzbgetpp/rarfile/

# LABELS ######################################################################

  - name: "Setting PG Labels"
    set_fact:
      pg_labels:
        traefik.frontend.auth.basic.users: "{{auth.stdout}}"
        traefik.enable: "true"
        traefik.port: "{{intport}}"
        traefik.frontend.redirect.entryPoint: "https"
        traefik.frontend.rule: "Host:{{pgrole}}.{{domain.stdout}},{{tldset}}"

  - name: "Setting PG Volumes"
    set_fact:
      pg_volumes:
        - "/opt/appdata/nzbget:/config"
        - "{{path.stdout}}/{{pgrole}}/completed:/completed"
        - "{{path.stdout}}/{{pgrole}}/incomplete:/incomplete"
        - "{{path.stdout}}/{{pgrole}}/nzb:/nzb"
        - "{{path.stdout}}/{{pgrole}}/log:/log"
        - "{{path.stdout}}/{{pgrole}}/tmp:/tmp"
        - "{{path.stdout}}/{{pgrole}}/queue:/queue"
        - "/opt/appdata/nzbget/scripts:/scripts"
        - "/mnt/unionfs:/unionfs"
        - "/etc/localtime:/etc/localtime:ro"

  - name: "Setting PG ENV"
    set_fact:
      pg_env:
        PUID: 1000
        PGID: 1000
        LC_ALL: "C"

# MAIN DEPLOYMENT #############################################################

  - name: "Deploying Container - {{pgrole}}"
    docker_container:
      name: "{{pgrole}}"
      image: "{{image}}"
      pull: yes
      published_ports:
        - "{{ports.stdout}}{{extport}}:{{intport}}"
      volumes: "{{pg_volumes}}"
      env: "{{pg_env}}"
      restart_policy: always
      networks:
        - name: plexguide
          aliases:
            - "{{pgrole}}"
      state: started
      labels: "{{pg_labels}}"

# ENDING FOR NZBGET #############

  - name: Please Wait - Pending .conf generation from NZBGET
    wait_for:
      path: "/opt/appdata/nzbget/nzbget.conf"
      state: present

  - name: "Wait 10 Seconds"
    wait_for:
      timeout: 10

  - name: Customize nzbget.conf
    docker_container:
      name: nzbget
      state: stopped

  - name: Remove User
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^ControlUsername\s?='
      line: 'ControlUsername='
      state: present

  - name: Remove Password
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: ControlPassword=tegbzn6789
      #regexp: '^ControlPassword=\s?='
      line: 'ControlPassword='
      state: present

  - name: Change MainDir directory
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^MainDir\s?='
      line: 'MainDir=/config'
      state: present

  - name: Change InterDir directory
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^InterDir\s?='
      line: 'InterDir=/incomplete'
      state: present

  - name: Change DestDir directory
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^DestDir\s?='
      line: 'DestDir=/completed'
      state: present

  - name: Change NZBDir directory
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^NzbDir\s?='
      line: 'NzbDir=/nzb'
      state: present

  - name: Change QueueDir
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^QueueDir\s?='
      line: 'QueueDir=/queue'
      state: present

  - name: Change TempDir
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^TempDir\s?='
      line: 'TempDir=/tmp'
      state: present

  - name: ScriptDir
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^ScriptDir\s?='
      line: 'ScriptDir=/scripts'
      state: present

  - name: LogFile
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^LogFile\s?='
      line: 'LogFile=/log/nzbget.log'
      state: present

  - name: DirectUnpack Set to On
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^DirectUnpack\s?='
      line: 'DirectUnpack=yes'
      state: present

  - name: Lowercase & Set Movie Category
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^Category1.Name\s?='
      line: 'Category1.Name=movies'
      state: present

  - name: Set Location of Movies
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^Category1.Name\s?='
      line: 'Category1.DestDir=/completed/movies'
      state: present

  - name: Lowercase & Set TV Category
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^Category2.Name\s?='
      line: 'Category2.Name=tv'
      state: present

  - name: Set Location of TV
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^Category1.Name\s?='
      line: 'Category2.DestDir=/completed/tv'
      state: present

  - name: Lowercase & Set Music Category
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^Category3.Name\s?='
      line: 'Category3.Name=music'
      state: present

  - name: Set Location of Music
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^Category1.Name\s?='
      line: 'Category3.DestDir=/completed/music'
      state: present

  - name: Lowercase & Set EBook Category
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^Category4.Name\s?='
      line: 'Category4.Name=ebooks'
      state: present

  - name: Set Location of EBooks
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^Category1.Name\s?='
      line: 'Category4.DestDir=/completed/ebooks'
      state: present

  - name: Fix Lowercase & Set Movie Category
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: 'Category1.Name='
      line: 'Category1.Name=movies'
      state: present

  - name: HealthCheck
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^HealthCheck\s?=.*'
      line: 'HealthCheck=Delete'
      state: present

  - name: Set DiskSpace
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: '^DiskSpace\s?=.*'
      line: 'DiskSpace=25000'
      state: present

  - name: Remove Generic Task
    lineinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      regexp: "{{ item.regexp }}"
      state: absent
    with_items:
      - {regexp: '.Task1\.Time\=.*' }
      - {regexp: '.Task1\.WeekDays\=.*' }
      - {regexp: '.Task1\.Command\=.*' }
      - {regexp: '.Task1\.Param\=.*' }

  - name: Unpause
    blockinfile:
      path: "/opt/appdata/nzbget/nzbget.conf"
      block: |
        Task1.Time=*,*:00,*:30
        Task1.WeekDays=1-7
        Task1.Command=UnpauseDownload
        Task1.Param=
      insertafter: "^### SCHEDULER"

  - name: Script DL
    get_url:
      url:  "{{item}}"
      dest: "/opt/appdata/nzbget/scripts"
      mode: 0775
      owner: "1000"
      group: "1000"
      force: yes
      validate_certs: no
    with_items:
      - "https://raw.githubusercontent.com/Prinz23/nzbget-pp-reverse/master/reverse_name.py"
      - "https://raw.githubusercontent.com/clinton-hall/GetScripts/master/flatten.py"
      - "https://raw.githubusercontent.com/clinton-hall/GetScripts/master/DeleteSamples.py"
    ignore_errors: yes

  - name: Download unzip.py script
    git:
      repo: "https://github.com/Prinz23/nzbgetpp"
      dest: "/opt/appdata/nzbget/scripts/nzbgetpp/"
      force: yes
    become: yes
    become_user: "{{user}}"
    register: unzip2
    ignore_errors: yes

  - name: Add unrar path to rarfile.py
    lineinfile:
      path: "/opt/appdata/nzbget/scripts/nzbgetpp/rarfile/rarfile.py"
      regexp: '^UNRAR_TOOL\s?=.*'
      line: 'UNRAR_TOOL = "/app/unrar"'
      state: present
    when: unzip2 is success

  - name: Import hash.py
    copy:
      src: "/opt/plexguide/containers/templates/hash.py"
      dest: "/opt/appdata/nzbget/scripts/nzbget/hash.py"
      owner: "1000"
      group: "1000"
      mode: 0775
      force: yes

  - name: Restart Container
    docker_container:
      name: nzbget
      state: started
