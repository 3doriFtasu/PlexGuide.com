#!/bin/bash
#
# Title:      PlexGuide (Reference Title File)
# Author(s):  Admin9705
# URL:        https://plexguide.com - http://github.plexguide.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'deluge'
        intport: '8112'
        extport: '8112'
        intport2: '58846'
        extport2: '58846'
        intport3: '58946'
        extport3: '58946'
        image: 'linuxserver/deluge'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/plexguide/containers/_core.yml'

    # FOLDER CREATION #############################################################
    - name: 'Including folders'
      include_tasks: '/opt/plexguide/containers/_folders.yml'
      
    - name: 'Checking for existing app data'
      stat:
        path: /opt/appdata/{{pgrole}}/core.conf
      register: inicheck

    # LABELS ######################################################################

    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}},{{tldset}}'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/opt/appdata/{{pgrole}}:/config'
          - '{{path.stdout}}:{{path.stdout}}'
          - '/etc/localtime:/etc/localtime:ro'
          - '/mnt:/mnt'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: 1000
          PGID: 1000

    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
          - '{{ports.stdout}}{{extport2}}:{{intport2}}'
          - '{{ports.stdout}}{{extport3}}:{{intport3}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'

    - name: 'Wait 6 Seconds'
      wait_for:
        timeout: 6

    - name: Stop Container
      docker_container:
        name: '{{pgrole}}'
        state: stopped

    # ENDING FOR DELUGE ###########################################################

    - name: 'Waiting for {{pgrole}} to initialize'
      wait_for:
        path: '/opt/appdata/{{pgrole}}/core.conf'
        state: present

    - name: 'Configuring {{pgrole}} for first time use'
      block:
        - name: 'Stopping {{pgrole}}'
          docker_container:
            name: '{{pgrole}}'
            state: stopped

        - name: Setting plugins directory
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/core.conf'
            regexp: '"plugins_location"'
            line: '"plugins_location": "/config/plugins",'
            state: present

        - name: Set download location
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/core.conf'
            regexp: '"download_location"'
            line: '"download_location": "{{path.stdout}}/downloads/{{pgrole}}",'
            state: present
          when: incomplete.stdout | length == 0

        - name: Set incomplete path
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/core.conf'
            regexp: '"download_location"'
            line: '"download_location": "{{path.stdout}}/incomplete/{{pgrole}}",'
            state: present
          when: incomplete.stdout | length > 0

        - name: Setting complete downloads directory
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/core.conf'
            regexp: '"move_completed_path"'
            line: '"move_completed_path": "{{path.stdout}}/downloads/{{pgrole}}",'
            state: present
          when: incomplete.stdout | length > 0

        - name: Setting torrent file directory
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/core.conf'
            regexp: '"torrentfiles_location"'
            line: '"torrentfiles_location": "{{path.stdout}}/torrent",'
            state: present

        - name: Setting torrent watch directory
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/core.conf'
            regexp: '"autoadd_location"'
            line: '"autoadd_location": "{{path.stdout}}/torrent/watch",'
            state: present

        - name: Setting move_completed when incomplete is undefined
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/core.conf'
            regexp: '"move_completed"'
            line: '"move_completed": false,'
            state: present
          when: incomplete.stdout | length == 0

        - name: Setting move_completed when incomplete is defined
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/core.conf'
            regexp: '"move_completed"'
            line: '"move_completed": true,'
            state: present
          when: incomplete.stdout | length > 0

        - name: Setting extractor folder
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/plugins/extractor.conf'
            regexp: '"use_name_folder"'
            line: '"use_name_folder": true,'
            state: present

        - name: Setting extractor
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/plugins/extractor.conf'
            regexp: '"extract_path"'
            line: '"extract_path": "{{path.stdout}}/downloads/deluge"'
            state: present

# FIRST TIME CONFIGURATION ####################################################
    - name: 'Configuring {{pgrole}} for first time use'
      block:
        - name: set compact_allocation
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/plugins/extractor.conf'
            regexp: '"compact_allocation"'
            line: '"compact_allocation": true,'
            state: present

        - name: set stop_seed_ratio"
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/plugins/extractor.conf'
            regexp: '"stop_seed_ratio""'
            line: '"stop_seed_ratio"": 1.0,'
            state: present

        - name: set seed_time_ratio_limit"
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/plugins/extractor.conf'
            regexp: '"stop_seed_ratio"'
            line: '"stop_seed_ratio"": 1.0,'
            state: present

        - name: set seed_time_ratio_limit"
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/plugins/extractor.conf'
            regexp: '"stop_seed_ratio"'
            line: '"remove_seed_at_ratio"": true,'
            state: present

        - name: set enc_prefer_rc4"
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/plugins/extractor.conf'
            regexp: '"enc_prefer_rc4"'
            line: '"enc_prefer_rc4"": true,'
            state: present

        - name: set enabled_plugins"
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/plugins/extractor.conf'
            regexp: '"enabled_plugins"'
            line: '"enabled_plugins"": ["Extractor", "Label"],'
            state: present
          when: not confcheck.stat.exists
        #when: not confcheck.stat.exists
        
    - name: Restart Container
      docker_container:
        name: qbittorrent
        state: started
