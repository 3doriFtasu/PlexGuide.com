#!/bin/bash
#
# [Ansible Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq & FlickerRate
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
- name: Register Domain
  shell: "cat /var/plexguide/server.domain"
  register: domain
  ignore_errors: True

- name: Register IP
  shell: "cat /var/plexguide/server.ip"
  register: ipaddress
  ignore_errors: True

- name: Register Ports
  shell: "cat /var/plexguide/server.ports"
  register: ports
  ignore_errors: True

- name: Register HD Path
  shell: "cat /var/plexguide/server.hd.path"
  register: path
  ignore_errors: True

- name: Register Auth Path
  shell: "cat /var/plexguide/server.ht"
  register: auth
  ignore_errors: True

- name: Logging Ansible Role Information
  shell: "echo 'INFO - Ansible Role {{pgrole}} Started' > /var/plexguide/pg.log && bash /opt/plexguide/roles/log/log.sh"

- name: Remove {{pgrole}} Container
  docker_container:
    name: "{{pgrole}}"
    state: absent
  ignore_errors: True

- name: Storing Role Name
  shell: "echo '{{pgrole}}' > /tmp/program_var"
  ignore_errors: True

##################### LOAD QUESTIONS ########## (START)
- name: "Check If Questions Exist"
  stat:
    path: "/opt/plexguide/roles/{{pgrole}}/tasks/questions.yml"
  register: "questions"

- debug: msg="Question Check - {{questions.stat.exists}} set to {{quescheck}}"

- name: "Deploy Questions"
  include_role:
    name: "{{pgrole}}"
    tasks_from: "questions.yml"
  ignore_errors: True
  when:
    - quescheck == "on"
    - "questions.stat.exists == True"
##################### LOAD QUESTIONS ########## (END)

##################### TLD PREP ############## (START)
- name: "Register TLD"
  shell: "cat /var/plexguide/tld.program"
  register: toplevel
  ignore_errors: True"

- debug: msg="Stored TLD - {{toplevel}} must match {{pgrole}} for TLD"

- name: "If Fact Matches - Enable TLD"
  set_fact:
    tldset: "{{domain.stdout}}"
  when: "toplevel.stdout == pgrole"

- debug: msg="TLDSET is now - {{domain.stdout}}"
