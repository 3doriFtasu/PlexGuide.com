#!/bin/bash
#
# [Ansible Role]
#
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
#################################################################################
---
  vars_prompt:
  - name: "server_type"
    prompt: "nWhich type of server would you like to deploy?\n1- Oraclen\n2- ColdFusionn\n3- II\n4- Tomcat\n5- File Serve\n6- Base Servern"
    private: 

- name: "Menu"
  shell: "bash /opt/plexguide/roles/{{role_name}}/menus/images.sh"

- set_fact:
    pgrole: "{{role_name}}"

- include_vars: variables.yml

- include_role:
    name: varstart

- name: Register Image
  shell: "cat /var/plexguide/image.{{role_name}}"
  register: image
  ignore_errors: True

- name: Register Extra
  shell: "cat /var/plexguide/extra.{{role_name}}"
  register: extra
  ignore_errors: True

- name: Create Folders
  file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
  with_items:
    - /opt/appdata/{{role_name}}/mp4_automator

- name: Deploy {{role_name}} Container
  docker_container:
    name: "{{role_name}}"
    image: "{{image.stdout}}"
    pull: yes
    cpu_shares: 256
    published_ports:
      - "{{ports.stdout}}{{extport}}:{{intport}}"
    env:
      APP: "radarr"
      VERSION: "stable"
      PUID: "1000"
      PGID: "1000"
      BACKUP: "no"
      MONO_TLS_PROVIDER: legacy
    networks:
      - name: plexguide
        aliases:
          - "{{role_name}}"
    volumes:
      - /opt/appdata/{{role_name}}/mp4_automator:/config_mp4_automator
      - "/opt/appdata/{{role_name}}:/config{{extra.stdout}}"
      - /mnt/unionfs:/unionfs
      - "{{path.stdout}}/torrentvpn/downloaded:/data/completed"
      - "{{path.stdout}}/sab/complete:/complete"
      - "{{path.stdout}}/nzbget/completed:/completed"
      - "{{path.stdout}}/rutorrents:/downloads"
      - "{{path.stdout}}/deluge/downloaded:/downloaded"
      - /mnt/qbittorrent/Downloads:/qbit-downloads
      - /etc/localtime:/etc/localtime:ro
    restart_policy: always
    state: started
    labels:
      traefik.enable: "true"
      traefik.frontend.redirect.entryPoint: "https"
      traefik.frontend.rule: "Host:{{role_name}}.{{domain.stdout}}"
      traefik.port: "{{extport}}"

- name: Install autoProcess.ini
  template:
    src: autoProcess.ini
    dest: /opt/appdata/{{role_name}}/mp4_automator/autoProcess.ini
    force: yes
    mode: 0775
    owner: 1000
    group: 1000

- include_role:
    name: varend