#!/bin/bash
#
# Version:  Ansible-1
# GitHub:   https://github.com/Admin9705/PlexGuide.com-The-Awesome-Plex-Server
# Author:   Admin9705 & Deiteq & Bryde ãƒ„
# URL:      https://plexguide.com
#
# PlexGuide Copyright (C) 2018 PlexGuide.com
# Licensed under GNU General Public License v3.0 GPL-3 (in short)
#
#   You may copy, distribute and modify the software as long as you track
#   changes/dates in source files. Any modifications to our software
#   including (via compiler) GPL-licensed code must also be made available
#   under the GPL along with build & install instructions.
#
############################################################# (KEY START)
---
- name: "Establish Key Variables"
  set_fact:
    intport: "7878"
    extport: "7878"
    pgrole: "{{role_name}}"
    image: "linuxserver/radarr"

- pause:
    prompt: "\nType Version # for Radarr\n1- Radarr (Recommended)\n2- Radarr 4K \n3- Radarr HDR"
  register: version
  until: version.user_input > "0" and version.user_input < "4"
  retries: 5
  delay: 1
  when: quescheck == "on"

- name: Set Radarr
  set_fact:
    pgrole: "radarr"
    extport: "7878"
  when: quescheck == "on" and version.user_input == "1"

- name: Set Radarr 4K
  set_fact:
    pgrole: "radarr4k"
    extport: "7874"
  when: quescheck == "on" and version.user_input == "2"

- name: Set Radarr HDR
  set_fact:
    pgrole: "radarrhdr"
    extport: "7877"
  when: quescheck == "on" and version.user_input == "3"

- name: "Key Variables Recall"
  include_role:
    name: "pgmstart"
    tasks_from: "keyvar.yml"
############################################################# (KEY END)

############################################################# (BASICS START)
#
############################################################# (BASICS END)
- name: "Create scripts folder - {{pgrole}}"
  file:
    path: /opt/appdata/{{role_name}}/scripts
    state: directory
    owner: 1000
    group: 1000
    mode: 0755

- name: "Copy scripts into directory - {{pgrole}}"
  copy:
    src: scripts
    dest: /opt/appdata/{{role_name}}
    directory_mode: yes
    owner: 1000
    group: 1000
    mode: 0755
    
- name: "Set Default Volume - {{pgrole}}"
  set_fact:
    default_volumes:
      - "/opt/appdata/{{pgrole}}/mp4_automator:/config_mp4_automator"
      - "/opt/appdata/{{pgrole}}:/config{{extra}}"
      - "/mnt/unionfs:/unionfs"
      - "{{path.stdout}}/torrentvpn/downloaded:/data/completed"
      - "{{path.stdout}}/sab/complete:/complete"
      - "{{path.stdout}}/nzbget/completed:/completed"
      - "{{path.stdout}}/rutorrents:/downloads"
      - "{{path.stdout}}/deluge/downloaded:/downloaded"
      - "/mnt/qbittorrent/Downloads:/qbit-downloads"
      - "/etc/localtime:/etc/localtime:ro"

- name: "Establish Key Variables - {{pgrole}}"
  set_fact:
    default_env:
      PUID: "1000"
      PGID: "1000"
      BACKUP: "no"
      MONO_TLS_PROVIDER: legacy
      APP: "radarr"
      VERSION: "stable"

- name: "Set Default Labels - {{pgrole}}"
  set_fact:
    default_labels:
      traefik.enable: "true"
      traefik.port: "{{intport}}"
      traefik.frontend.redirect.entryPoint: "https"
      traefik.frontend.rule: "Host:{{pgrole}}.{{domain.stdout}},{{tldset}}"
  when: wckdauth == False

- name: "Set Default Labels (WCKD) - {{pgrole}}"
  set_fact:
    default_labels:
      traefik.enable: "true"
      traefik.port: "{{intport}}"
      traefik.frontend.redirect.entryPoint: "https"
      traefik.app.frontend.rule: "Host:{{pgrole}}.{{domain.stdout}},{{tldset}}"
      traefik.app.frontend.auth.forward.address: "https://authclient.{{domain.stdout}}"
      traefik.api.frontend.rule: "Host:{{pgrole}}.{{domain.stdout}},{{tldset}};PathPrefix:/api"
  when: wckdauth == True

######################## Deploy PGMSTART
- include_role:
    name: "pgmstart"
