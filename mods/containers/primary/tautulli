tautulli () {

container_reset
# VARIABLES ####################################################################
pgrole="tautulli"
image="linuxserver/tautulli"
port_inside01="8181"
port_outside01="8181"
traefik_intport="8181"

container_path /pg/data/plex/database/Library/Application Support/Plex Media Server/Logs /logs
container_path /pg/data/$pgrole/scripts /scripts
container_path /pg/data/$pgrole /config/$pgrole
container_path /etc/localtime /etc/localtime:ro

container_permissions PUID 1000
container_permissions PGID 1000
container_permissions TZ Europe/London

# YML EXPORT ###################################################################
container_core
cat <<- EOF > "/pg/apps/$pgrole.yml"
$container_header
### ALIGN WITH THE A ################################## START - EXTRAS #########
    - name: 'config.ini Check - $pgrole'
      stat:
        path: /pg/data/$pgrole/config.ini
      register: confcheck

####### ALIGN WITH THE A ############################## CORE ###################
        $container_start
        published_ports:
          - '$portstatus$port_outside01:$port_inside01'
        env:
          $container_permissions
        labels:
        $container_traefik
        $container_oddball
        $container_ending

### ALIGN WITH THE A ################################## END - EXTRAS ###########
    - name: 'Configuring $pgrole for first time use'
      block:
        - name: 'Waiting for $pgrole to start'
          wait_for:
            path: '/pg/data/$pgrole/config.ini'
            state: present

        - name: Stop Container
          docker_container:
            name: '$pgrole'
            state: stopped

        - name: Restart $pgrole
          docker_container:
            name: '$pgrole'
            state: started

      when: not confcheck.stat.exists
EOF
}
