#!/bin/bash
############# https://github.com/plexguide/PlexGuide.com/graphs/contributors ###
drives_basic_deploy() {

# create file folder for sizes
  rm -rf /pg/var/drives/sizes && common_fcreate_silent /pg/var/drives/sizes/

# pulls key variables
drives_menu_start_setup

if [[ ! -e "/tmp/.lock" ]]; then
  # temporary for file test generation
  rm -rf /pg/var/transport/*
  rm -rf /pg/complete/nzbget/*
  rm -rf /pg/complete/rutorrent/*
  mkdir -p /pg/var/transport/{01,02,03,04,05,06,07,08}
  tempfile=$(date +"%T")
  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget01"
  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget03"
  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget02"

  echo "" >> "/pg/complete/rutorrent/${tempfile}-rutorrent11"
  echo "" >> "/pg/complete/rutorrent/${tempfile}-rutorrent4"
  echo "" >> "/pg/complete/rutorrent/${tempfile}-rutorrent9"

  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget-phase2-01"
  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget-phase2-02"
  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget-phase2-03"
  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget-phase2-04"
  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget-phase2-05"
  echo "" >> "/pg/complete/nzbget/${tempfile}-nzbget-phase2-06"

  touch "/tmp/.lock"
fi

# declare variables and remove
path_upload="/pg/var/upload"
mkdir -p $path_upload && rm -rf "$path_upload"/{upload.short,upload.long}

while read z; do
echo "$(find /pg/complete/$z -type f -printf "\n%AT %p" | awk '{print $2}' | tail -n +2)" >> "$path_upload"/upload.long

# generates short and long paths for upload
  while read p; do
      remove_path="/pg/complete/$z"
      valid=$(echo $p | grep $z)
        if [[ "$valid" != "" ]]; then
          echo "${p#*$remove_path}" >> "$path_upload"/upload.short; fi
    done <"$path_upload"/upload.long
done <"$path_upload"/program.list

echo "$(ls /pg/transport)" > /pg/var/upload/slot.list

# transport process
merit_count=0
while read b; do
  echo "TEST2 - ${b}"
  dircheck=$(ls "/pg/var/transport/${b}")

  if [[ "$dircheck" == "" ]]; then

    # moves along the merit list
    let "merit_count=merit_count+1"
    echo "merit: $merit_count"
    rclone_long=$(sed "${merit_count}q;d" /pg/var/upload/upload.long)

    if [[ "$rclone_long" != "" ]]; then
      rclone_short=$(sed "${merit_count}q;d" /pg/var/upload/upload.short)

      echo "$rclone_long - $rclone_short"
        # execute if not empty
        echo $b
        common_fcreate_silent "/pg/var/transport/${b}"
        mkdir -p "/pg/var/transport/${b}"
        touch "/pg/var/transport/${b}/rclone.log"
        echo "$rclone_short" > "/pg/var/transport/${b}/key.short"
        echo "$rclone_long" > "/pg/var/transport/${b}/key.long"

        if [[ "$rclone_long" != "" ]]; then

        filesizecheck() {
          echo "Checking File Size - $rclone_short"
          echo $(ls -lah "$rclone_long" | awk '{print $5}') > "/pg/var/drives/sizes/$rclone_short.1"
          sleep 2
          echo $(ls -lah "$rclone_long" | awk '{print $5}') > "/pg/var/drives/sizes/$rclone_short.2"
        }
          #ensures the file size has not changed prior to uploading
          echo "file1"
          filesizecheck
          echo "jjk" > "/pg/var/drives/sizes/$rclone_short.2"

          while [[ $(cat "/pg/var/drives/sizes/$rclone_short.1") != $(cat "/pg/var/drives/sizes/$rclone_short.2") ]]; do
          echo "file2"
          echo "jjk" > "/pg/var/drives/sizes/$rclone_short.2"
          filesizecheck
          done
          #removes jnk vars
          rm -rf "/pg/var/drives/sizes/$rclone_short.1" cat "/pg/var/drives/sizes/$rclone_short.2"

          echo "Checking File Size - $rclone_short"
          echo "TRANSFERING LOCAL - $rclone_long"
          rclone moveto "$rclone_long" /pg/transfer/"$rclone_short" \
            --config=/pg/var/drives/gd/gd.conf \
            #--log-file="/pg/var/transport/${b}/rclone.log" \
            #--log-level=INFO --stats=5s --stats-file-name-length=0

          echo "TRANSFERING GSUITE - $rclone_long"
          rclone moveto /pg/transfer/"$rclone_short" gd:"$rclone_short" \
            --config=/pg/var/drives/gd/gd.conf \
            --log-file="/pg/var/transport/${b}/rclone.log" \
            --log-level=INFO --stats=5s --stats-file-name-length=0
    fi; fi; fi
done </pg/var/upload/slot.list

# if completed, then free slot for upload
while read m; do
  if [[ -e "/pg/var/transport/${m}/key.short" ]]; then
    echo "/pg/var/transport/${m}/key.short"
    rclone_short=$(cat "/pg/var/transport/${m}/key.short")
    rclone_short=$(echo ${rclone_short} | cut -c 2-)
    delete_check=$(rclone ls --config /pg/var/drives/gd/gd.conf --max-depth 1 gd: | grep "${rclone_short}")
    if [[ "$delete_check" != "" ]]; then rm -rf /pg/var/transport/${m}/* && echo "FREED - {$m}"; fi
  fi
done </pg/var/upload/slot.list

# repeat
drives_basic_deploy
}
