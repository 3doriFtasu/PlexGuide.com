#!/bin/bash
############# https://github.com/plexguide/PlexGuide.com/graphs/contributors ###
drives_basic_deploy() {

# temporary ####################################################################
transport_path="/pg/var/transport"
mkdir -p "$transport_path"/{01,02,03,04,05,06,07,08}

# declare variables and remove clutter #########################################
path_upload="/pg/var/upload"; remove_path="/pg/complete"

# stores number of upload slots into a stored variable #########################
echo "$(ls /pg/var/transport)" > "$path_upload"/slot.list

# clears folder as a double check if there is no rclone.log ####################
while read rt; do
  if [[ ! -e "/pg/var/transport/$rt/rclone.log" ]]; then
  rm -rf "/pg/var/transport/${rt}/*" ; fi; done <"$path_upload"/slot.list

# creates sorted merit list ####################################################
# find /pg/complete/ -type f -mmin +1 -printf "\n%AT %p" | sort -k1 | cut -d " " -f 2- | tail -n +2 > "$path_upload"/upload.long
mkdir -p $path_upload && rm -rf "$path_upload"/{upload.short,upload.long}
find /pg/complete/ -type f -printf "\n%AT %p" | sort -k1 | cut -d " " -f 2- | tail -n +2 > "$path_upload"/upload.long

# generates short files ########################################################
while read p; do
  echo "${p#*$remove_path}" >> "$path_upload"/upload.short
done <"$path_upload"/upload.long

# if nothing to upload #########################################################
if [[ $(cat "$path_upload"/upload.long) == "" ]]; then echo "NOTHING TO UPLOAD"
sleep 5; drives_basic_deploy && exit; fi

# exempt items from list #######################################################
while read zg; do
  if [[ -e "/pg/var/transport/$zg/rclone.log" && -e "$path_upload"/upload.long ]]; then
    removeitems=$(cat /pg/var/transport/${zg}/key.long)
    if [[ "$removeitems" != "" ]]; then
      grep -v "$removeitems" "$path_upload"/upload.long > "$path_upload"/upload.long.tmp
      mv "$path_upload"/upload.long.tmp "$path_upload"/upload.long
    fi
  fi
done <"$path_upload"/slot.list

# before looping, ensures to reset item to fetch from merit list ###############
merit_count=0

# start looping through slot folders ###########################################
while read b; do

transport_loop="off"
mkdir -p "$path_upload"/${b}

  if [[ ! -e "/pg/var/transport/${b}/key.long" ]]; then transport_loop="on"

    if [[ "$transport_loop" == "on" ]]; then
      let "merit_count=merit_count+1"
      touch /pg/var/transport/${b}/key.short
      sed "${merit_count}q;d" "$path_upload"/upload.long >> /pg/var/transport/${b}/key.long
      sed "${merit_count}q;d" "$path_upload"/upload.short >> /pg/var/transport/${b}/key.short
      echo "FLAG .5 - $b"; fi

    if [[ $(cat "/pg/var/transport/${b}/key.long") == "" ]]; then rm -rf /pg/var/transport/${b}/* && transport_loop="off"; fi

        if [[ "$transport_loop" == "on" ]]; then
          shortkey=$(cat /pg/var/transport/${b}/key.short); longkey=$(cat /pg/var/transport/${b}/key.long)
          touch /pg/var/transport/${b}/rclone.log

# size check ###################################################################
          echo 1 > "/pg/var/transport/${b}/check.1"; echo 2 > "/pg/var/transport/${b}/check.2"
          while [[ $(cat "/pg/var/transport/${b}/check.1") != $(cat "/pg/var/transport/${b}/check.2") ]]; do
            wc -c $(cat "/pg/var/transport/${b}/key.long") | awk '{print $1}' > /pg/var/transport/${b}/check.1
            cat /pg/var/transport/${b}/check.1
            sleep 2
            wc -c $(cat "/pg/var/transport/${b}/key.long") | awk '{print $1}' > /pg/var/transport/${b}/check.2
            cat /pg/var/transport/${b}/check.2
            sleep 2
          done
# transfer process #############################################################

          echo "TRANSFERING GSUITE - $longkey"
          rclone moveto "$longkey" gd:"$shortkey" \
            --config=/pg/var/drives/gd/gd.conf \
            --log-file="/pg/var/transport/${b}/rclone.log" \
            --log-level=INFO --stats=5s --stats-file-name-length=0 &>/dev/null &
            fi; fi

# prevents overloading #########################################################
      sleep .5
done <"$path_upload"/slot.list

# conducting checks, file missing; then clear ##################################
while read zz; do
  if [[ -e "/pg/var/transport/${zz}/key.long" ]];
     then delete_check=$(cat /pg/var/transport/${zz}/key.long)
  if [[ ! -e "$delete_check" && "$delete_check" != "" ]]; then
   rm -rf /pg/var/transport/${zz}/*
   echo "FREED - $zz"
fi; fi
done <"$path_upload"/slot.list
echo "LOOP CYCLE"
# repeat #######################################################################
drives_basic_deploy && exit
}
